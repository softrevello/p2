


1- contacto original app.py

@app.route('/contacto')
def contacto():
    return render_template('contacto.html')

2-
@app.route('/procesos')
def procesos():
    return render_template('procesos.html')





 ### AGREGADO
  
    
    
#    from flask import Flask, render_template, request, redirect, url_for,
#import mysql.connector

#app = Flask(__name__)
#app.secret_key = 'clave_secreta_segura'

# Configuración de conexión a MySQL
#db_config = {
#    'host': 'localhost',
#    'user': 'root',  # Cambia por tu usuario de MySQL
#    'password': '',  # Cambia por tu contraseña
#    'database': 'bd_seguirdad'
#}

# Página principal para gestión de equipos
@app.route('/equipos', methods=['GET', 'POST'])
def equipos():
   # conn = mysql.connector.connect(**db_config)
   # cursor = conn.cursor(dictionary=True)

 ### Agregado mio
   connection = connect_to_db()
   with connection.cursor() as cursor:
###


    if request.method == 'POST':
        # Capturar datos del formulario
        nombre_equipo = request.form['nombre_equipo']
        tipo_equipo = request.form['tipo_equipo']
        marca = request.form['marca']
        modelo = request.form['modelo']
        numero_serie = request.form['numero_serie']
        fecha_compra = request.form['fecha_compra']

        try:
            # Insertar nuevo equipo
            query = """
            INSERT INTO equipos (nombre_equipo, tipo_equipo, marca, modelo, numero_serie, fecha_compra)
            VALUES (%s, %s, %s, %s, %s, %s)
            """
            cursor.execute(query, (nombre_equipo, tipo_equipo, marca, modelo, numero_serie, fecha_compra))
            conn.commit()
            flash('Equipo agregado correctamente.', 'success')
        except mysql.connector.Error as err:
            flash(f'Error al agregar el equipo: {err}', 'danger')

    # Recuperar todos los equipos
    cursor.execute("SELECT * FROM equipos")
    equipos = cursor.fetchall()

    conn.close()
    return render_template('equipos.html', equipos=equipos)

# Ruta para eliminar un equipo
@app.route('/equipos/eliminar/<int:id>')
def eliminar_equipo(id):
    conn = mysql.connector.connect(**db_config)
    cursor = conn.cursor()

    try:
        cursor.execute("DELETE FROM equipos WHERE id = %s", (id,))
        conn.commit()
        flash('Equipo eliminado correctamente.', 'info')
    except mysql.connector.Error as err:
        flash(f'Error al eliminar el equipo: {err}', 'danger')

    conn.close()
    return redirect(url_for('equipos'))

# Ruta para editar un equipo
@app.route('/equipos/editar/<int:id>', methods=['GET', 'POST'])
def editar_equipo(id):
    conn = mysql.connector.connect(**db_config)
    cursor = conn.cursor(dictionary=True)

    if request.method == 'POST':
        # Actualizar datos
        nombre_equipo = request.form['nombre_equipo']
        tipo_equipo = request.form['tipo_equipo']
        marca = request.form['marca']
        modelo = request.form['modelo']
        numero_serie = request.form['numero_serie']
        fecha_compra = request.form['fecha_compra']

        try:
            query = """
            UPDATE equipos
            SET nombre_equipo = %s, tipo_equipo = %s, marca = %s, modelo = %s,
                numero_serie = %s, fecha_compra = %s
            WHERE id = %s
            """
            cursor.execute(query, (nombre_equipo, tipo_equipo, marca, modelo, numero_serie, fecha_compra, id))
            conn.commit()
            flash('Equipo actualizado correctamente.', 'success')
        except mysql.connector.Error as err:
            flash(f'Error al actualizar el equipo: {err}', 'danger')

        conn.close()
        return redirect(url_for('equipos'))

    # Obtener los datos actuales del equipo
    cursor.execute("SELECT * FROM equipos WHERE id = %s", (id,))
    equipo = cursor.fetchone()

    conn.close()
    return render_template('editar_equipo.html', equipo=equipo)

if __name__ == '__main__':
    app.run(debug=True)




